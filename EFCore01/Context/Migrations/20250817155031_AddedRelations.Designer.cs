// <auto-generated />
using System;
using EFCore01.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore01.Context.Migrations
{
    [DbContext(typeof(ITIDBContext))]
    [Migration("20250817155031_AddedRelations")]
    partial class AddedRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore01.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("DateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.Property<int>("Top_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Top_ID");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Course_Inst", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<string>("Evaluate")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VarChar");

                    b.Property<int>("inst_ID")
                        .HasColumnType("int");

                    b.HasKey("Course_ID");

                    b.HasIndex("inst_ID");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("Ins_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("Ins_ID");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VarChar");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int?>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HourRate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Stud_Course", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("stud_ID")
                        .HasColumnType("int");

                    b.HasKey("Course_ID");

                    b.HasIndex("stud_ID");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VarChar");

                    b.Property<int>("Age")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int?>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 10L, 10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("EFCore01.Models.Course", b =>
                {
                    b.HasOne("EFCore01.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("Top_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EFCore01.Models.Course_Inst", b =>
                {
                    b.HasOne("EFCore01.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore01.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("inst_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EFCore01.Models.Department", b =>
                {
                    b.HasOne("EFCore01.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("Ins_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EFCore01.Models.Instructor", b =>
                {
                    b.HasOne("EFCore01.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dept_ID");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCore01.Models.Stud_Course", b =>
                {
                    b.HasOne("EFCore01.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore01.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("stud_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EFCore01.Models.Student", b =>
                {
                    b.HasOne("EFCore01.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dep_Id");

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
